{"version":3,"sources":["actions/data.js","api/data.js","containers/Graph/index.js","components/Header/index.js","components/Tag/index.js","components/Product/index.js","containers/Product/index.js","containers/Sales/index.js","containers/App/index.js","reducers/data.js","reducers/index.js","serviceWorker.js","index.js"],"names":["fetchData","dispatch","Promise","resolve","setTimeout","data","then","type","payload","Graph","renderMonths","react_default","a","createElement","className","map","month","this","props","parseDate","d3","x","domain","d","weekEnding","range","y","retailSales","y2","wholesaleSales","retailLine","curve","alpha","wholesaleLine","width","height","Component","Header","Tag","_ref","name","Product","image","title","subtitle","src","alt","ProductContainer","product","components_Product","tags","tag","components_Tag","Sales","columns","accessor","sales","style","background","react_table_es","defaultSorted","id","desc","showPagination","App","renderContent","_this","containers_Product","white","containers_Graph","containers_Sales","components_Header","loading","connect","state","initialState","arguments","length","undefined","action","Object","objectSpread","reducers","combineReducers","Boolean","window","location","hostname","match","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","Reducers","applyMiddleware","ReduxThunk","ReactDOM","render","es","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.66416459.chunk.js","sourcesContent":["import { getData } from '../api/data';\n\nexport const FETCH_DATA = 'FETCH_DATA';\n\nexport const fetchData = () => {\n  return dispatch => {\n    getData()\n      .then(data => {\n        dispatch({\n          type: FETCH_DATA,\n          payload: data\n        });\n      });\n  }\n};","import data from '../assets/Webdev_data2.json';\n\nexport const getData = () => \n  new Promise(resolve => {\n    setTimeout(() => resolve(data[0]), 500);\n  });","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport './styles.css';\n\nclass Graph extends Component {\n  static propTypes = {\n    data: PropTypes.object\n  };\n\n  renderMonths = () => {\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    return (\n      <div className={'graph--months'}>\n        {months.map(month => <span className={'graph--text'}>{month}</span>)}\n      </div>\n    );\n  }\n\n  render() {\n    const { data } = this.props;\n    const parseDate = d3.timeParse('%Y-%m-%d');\n\n    const x = d3.scaleLinear()\n      .domain(d3.extent(data, d => parseDate(d.weekEnding)))\n      .range([0, 750]);\n\n    const y = d3.scaleLinear()\n      .domain([100, d3.max(data, d => d.retailSales)])\n      .range([150, 100]);\n    \n    const y2 = d3.scaleLinear()\n      .domain([150, d3.max(data, d => d.wholesaleSales)])\n      .range([200, 150]);\n    \n    const retailLine = d3.line()\n      .x(data => x(parseDate(data.weekEnding)))\n      .y(data => y(data.retailSales))\n      .curve(d3.curveCatmullRom.alpha(0.5));\n    \n    const wholesaleLine = d3.line()\n      .x(data => x(parseDate(data.weekEnding)))\n      .y(data => y2(data.wholesaleSales))\n      .curve(d3.curveCatmullRom.alpha(0.5));\n    \n    return (\n      <div className={'graph'}>\n        <span className={'graph--text'}>Retail Sales</span>\n        <div className={'graph--container'}>\n          <svg width={750} height={300}>\n            <path className={'retail-sales'} d={retailLine(data)} />\n            <path className={'wholesale-sales'} d={wholesaleLine(data)} />\n          </svg>\n          {this.renderMonths()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Graph;\n","import React from 'react';\nimport './styles.css';\n\nconst Header = () => {\n  return (\n    <div className={'header'}>\n      <h1 className={'header--title'}>Stackline</h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './styles.css';\n\nconst Tag = ({ name }) => {\n  return (\n    <div className={'tag'}>\n      <span className={'tag--name'}>{name}</span>\n    </div>\n  );\n};\n\nexport default Tag;\n","import React from 'react';\nimport './styles.css';\n\nconst Product = ({ image, title, subtitle }) => {\n  return (\n    <div className={'product'}>\n      <img className={'product--image'} src={image} alt={title} />\n      <h3 className={'product--title'}>{title}</h3>\n      <span className={'product--subtitle'}>{subtitle}</span>\n    </div>\n  );\n};\n\nexport default Product;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css';\n\nimport Tag from '../../components/Tag';\nimport Product from '../../components/Product';\n\nclass ProductContainer extends Component {\n  static propTypes = {\n    product: PropTypes.object\n  };\n\n  render() {\n    const { product } = this.props;\n    return (\n      <div className={'product-container'}>\n        <Product \n          title={product.title} \n          image={product.image} \n          subtitle={product.subtitle} \n        />\n        <div className={'tag-container'}>\n          {product.tags.map(tag => <Tag name={tag} />)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProductContainer;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ReactTable from 'react-table';\nimport \"react-table/react-table.css\";\n\nclass Sales extends Component {\n  static propTypes = {\n    sales: PropTypes.object\n  };\n\n  columns = [\n    {\n      Header: 'Week Ending',\n      accessor: 'weekEnding'\n    },\n    {\n      Header: 'Retail Sales',\n      accessor: 'retailSales'\n    },\n    {\n      Header: 'Wholesale Sales',\n      accessor: 'wholesaleSales'\n    },\n    {\n      Header: 'Units Sold',\n      accessor: 'unitsSold'\n    },\n    {\n      Header: 'Retailer Margin',\n      accessor: 'retailerMargin'\n    }\n  ];\n\n  render() {\n    const { sales } = this.props;\n    return (\n      <div style={{ background: 'white' }}>\n        <ReactTable\n          className={'-highlight'}\n          columns={this.columns}\n          data={sales}\n          defaultSorted={[{ id: 'weekEnding', desc: false }]}\n          showPagination={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Sales;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\n\nimport { fetchData } from '../../actions/data';\n\nimport Graph from '../Graph';\nimport Header from '../../components/Header';\nimport Product from '../Product';\nimport Sales from '../Sales';\nimport { white } from 'ansi-colors';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchData();\n  }\n\n  renderContent = () => {\n    const { data } = this.props;\n    return (\n      <div className={'content-container'}>\n        <Product product={data.product} />\n        <div style={{ background: white, width: '70%' }}>\n          <Graph data={data.product.sales} />\n          <Sales sales={data.product.sales} />\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        {this.props.data.loading ? null : this.renderContent()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: () => {\n      dispatch(fetchData());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { FETCH_DATA } from '../actions/data.js';\n\nconst initialState = {\n  product: [],\n  loading: true\n};\n\nconst data = (state = initialState, action) => {\n  switch(action.type) {\n    case FETCH_DATA:\n      return {\n        ...state,\n        product: action.payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n\nexport default data;","import { combineReducers } from 'redux';\n\nimport data from './data.js';\n\nconst reducers = combineReducers({\n  data\n});\n\nexport default reducers;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport App from './containers/App';\nimport Reducers from './reducers';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet store = createStore(\n  Reducers, composeEnhancer(applyMiddleware(ReduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}